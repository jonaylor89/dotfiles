#!/usr/bin/env bash

#################################################
#
# System configuration
# 
# Terminal           - Zsh
# 
# Zsh Theme          - Spaceship (Requires Nerd Font)
#
# Vim Plugin Manager - Vundle
#
################################################

system_type=$(uname -s) if [ $system_type = "Darwin" ]
then
    echo ""
    echo "--------------------------------------------------"
    echo "=-=-=-=-=-= Mac System Installation =-=-=-=-=-="
    echo "--------------------------------------------------"
    echo ""
    # Module for Mac
fi

if [ $system_type = "Linux" ]
then
    echo
    echo "-------------------------------------------------"
    echo "=-=-=-=-=-= Linux System Installation =-=-=-=-=-="
    echo "-------------------------------------------------"
    echo 
    # Modules for Linux
fi

# Modules for both mac and linux

read -p '[+] tmux configs install? [Y/n] ' install_tmux
install_tmux=${install_tmux:-Y}
read -p '[+] vim configs install? [Y/n] ' install_vim
install_vim=${install_vim:-Y}
read -p '[+] zsh configs install? [Y/n] ' install_zsh
install_zsh=${install_zsh:-Y}
read -p '[+] alacritty configs install? [Y/n] ' install_alacritty
install_alacritty=${install_alacritty:-Y}
read -p '[+] X server configs install? [Y/n] ' install_X
install_X=${install_X:-Y}

if [[ $install_tmux != [nN] ]]
then
    if [ -f ~/.tmux.conf ]
    then
        echo "[INFO] File already exists on system (tmux.conf)"
    else
        echo "===> Linking tmux configurations"
        ln -s ~/dotfiles/tmux/tmux.conf ~/.tmux.conf
    fi
fi

if [[ $install_vim != [nN] ]]
then
    if [ -f ~/.vimrc ]
    then
        echo "[INFO] File already exists on system (vimrc)"
    else
        echo "===> Linking vim configurations"
        ln -s ~/dotfiles/vim/vimrc ~/.vimrc
    fi
fi

if [[ $install_zsh != [nN] ]]
then
    if [ -f ~/.zshrc ]
    then
        echo "[INFO] File already exists on system (zshrc)"
    else
        echo "===> Linking zsh configurations"
        ln -s ~/dotfiles/zsh/zshrc ~/.zshrc
    fi
fi

if [[ $install_alacritty != [nN] ]]
then
    if [ -f ~/.config/alacritty.yml ]
    then
        echo "[INFO] File already exists on system (alacritty.yml)"
    else
        echo "===> Linking alacritty configurations"
        ln -s ~/dotfiles/alacritty/alacritty.yml ~/.config/alacritty.yml
    fi
fi 

if [[ $install_X != [nN] ]]
then
    if [ -f ~/.Xresources ]
    then
        echo "[INFO] File already exists on system (Xresources)"
    else
        echo "===> Linking X server configurations"
        ln -s ~/dotfiles/X/Xresources ~/.Xresources
    fi
fi

# Download oh-my-zsh

if [ -d ~/.oh-my-zsh ] 
then
    echo "[INFO] oh-my-zsh already installed"
else
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
fi

# Download autosuggestions
if [ -d ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions ]
then
    echo "[INFO] zsh autosuggestion already installed"
else
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
fi

# Download syntex highlighting
if [ -d ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting ]
then
    echo "[INFO] zsh autosuggestion already installed"
else
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
fi

# Download and install shapship theme
if [ -d ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/themes/spaceship-prompt ]
then
    echo "[INFO] zsh spaceship theme is already installed"
else
    git clone https://github.com/denysdovhan/spaceship-prompt.git "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/themes/spaceship-prompt"
    ln -s "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme" "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/themes/spaceship.zsh-theme"
fi

# Download and install Vundle
if [ -d ~/.vim/bundle/Vundle.vim ]
then
    echo "[INFO] Vundle is already installed"
else
    git clone https://github.com/VundleVim/Vundle.vim.git  ~/.vim/bundle/Vundle.vim
fi

# Download and install a nerd font
if [[ $install_X != [nN] ]]
then
    FONT_INSTALLED=$(fc-list | grep -i "SauceCodePro Nerd Font Complete Mono")
    if [ -z "$FONT_INSTALLED" ]; then
        read -p "[+] The SauceCodePro Nerd Font Complete Mono font is not currently installed, would you like to install it now? (y/N) " response
        if [[ "$response" == [yY] ]]; then
            echo "[*] Installing the SauceCodePro Nerd FontComplete Mono font to the ~/.fonts directory..."
            git clone https://github.com/ryanoasis/nerd-fonts.git
            ./nerd-fonts/install.sh 'SauceCodePro Nerd Font Complete Mono'
            rm -rf nerd-fonts
            FONT_INSTALLED=$(fc-list | grep -i "SauceCodePro Nerd Font Complete Mono");
            if [ -n "$FONT_INSTALLED" ]; then
                echo "[*] The SauceCodePro Nerd Font Complete Mono font was sucessfully installed!"
            else
                echo "[INFO] Something went wrong while trying to install the SauceCodePro Nerd Font Mono font."
            fi
        else
            echo "[*] Skipping the installation of the SauceCodePro Nerd Font Complete Mono font..."
            echo "[*] Please note that this configuration will not work without a nerd font."
        fi
    else
        echo "[INFO] The SauceCodePro Nerd Font Complete Mono font has already been installed.";
    fi
else
    echo "[*] Skipping the installation of the SauceCodePro Nerd Font Complete Mono font..."
    echo "[*] Please note that this configuration will not work without a nerd font."
fi

# Download and install Tmux theme
if [ -d ~/.tmux-themepack ]
then
    echo "[INFO] tmux themepack already installed"
else
    git clone https://github.com/jihem/tmux-themepack.git ~/.tmux-themepack
    source "${HOME}/.tmux-themepack/powerline/block/blue.tmuxtheme"
fi

echo "[*] Configuration complete"

