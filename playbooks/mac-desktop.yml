
- 
  name: MacOS Desktop Configuration
  hosts: localhost
  vars:
    brew_cask_packages:
      - 'atom'
      - 'docker'
      - 'dropbox'
      - 'firefox'
      - 'google-chrome'
      - 'iterm2'
      - 'lastpass'
      - 'macvim'
      - 'skype'
      - 'slack'
      - 'spotify'
      - 'visual-studio-code'
      - 'vmware-fusion'
    brew_packages:
      - 'autoconf'
      - 'ansible'
      - 'bash-completion'
      - 'chunkwm'
      - 'cmake'
      - 'cowsay'
      - 'docker-compose'
      - 'docker-machine'
      - 'fd'
      - 'figlet'
      - 'fish'
      - 'fortune'
      - 'fx'
      - 'fzf' 
      - 'gcc'
      - 'gdb'
      - 'git'
      - 'git-lfs'
      - 'go'
      - 'htop'
      - 'hub'
      - 'neofetch'
      - 'nmap'
      - 'openssl'
      - 'python'
      - 'ranger'
      - 'skhd'
      - 'tmux'
      - 'ubersicht'
      - 'wget'
      - 'yarn'
      - 'youtube-dl'
      - 'zsh'
      - 'zsh-syntax-highlighting'
    install_homebrew_if_missing: true
    upgrade_homebrew_packages: true
  pre_tasks:
    - name: Ensuring Homebrew Is Installed
      stat:
        path: "/usr/local/bin/brew"
      register: "homebrew_check"

    - name: Fail If Homebrew Is Not Installed and install_homebrew_if_missing Is False
      fail:
        msg: "Homebrew is missing...Install from http://brew.sh/"
      when: >
            not homebrew_check.stat.exists and
            not install_homebrew_if_missing
    - name: Installing Homebrew
      command: '/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"'
      when: >
            not homebrew_check.stat.exists and
            install_homebrew_if_missing
  tasks:
      - name: Updating Homebrew
      homebrew:
        update_homebrew: true
      when: homebrew_check.stat.exists

    - name: Installing Homebrew Packages
      homebrew:
        name: "{{ item }}"
        state: "present"
        upgrade_all: "{{ upgrade_homebrew_packages }}"
      with_items: '{{ brew_packages }}'
      when: homebrew_check.stat.exists

    - name: Installing Homebrew Cask Packages
      homebrew_cask:
        name: "{{ item }}"
        state: "present"
      with_items: '{{ brew_cask_packages }}'
      when: homebrew_check.stat.exists
